function init(self)
    self.update_counter = 0
    msg.post("@render:", "clear_color", {color = vmath.vector4(1,0,0,1) })
    self.safearea, self.safearea_status = safearea.get_insets()
    pprint("SAFE_AREA in init():", self.safearea, self.safearea_status)
    window.set_listener(function ()
        pprint("SAFE_AREA in window listener:", safearea.get_insets())
    end)

    timer.delay(1, false, function()
        -- iOS only
        safearea.set_background_color(vmath.vector4(0,0,0,0))
    end)
end

function update(self)
    if self.safearea_status == safearea.STATUS_NOT_READY_YET then
        self.update_counter = self.update_counter + 1
        print("Update:", self.update_counter)
        self.safearea, self.safearea_status = safearea.get_insets()
        self.corners, self.corners_status = safearea.get_corners_radius()
        print("Safearea Status:", self.safearea_status)
        print("Corners Status:", self.corners_status)
        if self.safearea_status == safearea.STATUS_OK then
            pprint("SAFE_AREA in update:", self.safearea)
            pprint("CORNERS in update:", self.corners)
            -- https://developer.android.com/develop/ui/views/layout/insets/rounded-corners
            for key, value in pairs(self.corners) do
                local offset = value * math.sin(math.rad(45))
                print("Offset "..key.." : "..offset)
            end
        end
    end
end